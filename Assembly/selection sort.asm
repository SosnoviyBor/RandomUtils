; ---------------------------------------------------------------------------------
; Предназначение: сортировка методом выбора от большего к меньшему
; Ввод:
; SI <- ссылка на начало массива
; CX <- ссылка на конец массива
; Вывод: ---
; ---------------------------------------------------------------------------------
proc sort
    ; SI Вказує на перший елемент (після першої ітерації - останній відсортований)
    SORT_START:
        mov bp, si              ; Лічильник ітерацій у циклі пошуку
        inc bp
        mov bx, bp              ; Адреса першого елементу у циклі пошуку
        mov di, 0               ; Зміщення адреси при пошуку найбільшого елементу
        mov ah, [bx]            ; Перший елемент у циклі пошуку (після нього - найменший елемент після операції пошуку)
       
        HIGHEST_FINDER:         ; Цикл пошуку найбільшого елементу після елементу за адресою DS:SI
        cmp bp, cx              ; Умова виходу із циклу пошуку
        je SWAPPER              ; Цикл буде перерваний, якщо ми дійшли до кінця таблиці при пошуку
       
        inc di
        cmp ah, [bx+di]        
        ja ISNT_HIGHEST         ; Якщо елемент AH менший за [BX+SI], тоді ми НЕ ПЕРЕСТРИБУЄМО наступні до ISNT_HIGHEST
        add bx, di
        mov ah, [bx]
        mov di, 0
        ISNT_HIGHEST:
        inc bp
        jmp HIGHEST_FINDER
       
        SWAPPER:                ; Цикл переміщення найбільшого елементу на його місце
        cmp [si], ah            
        ja NO_SWAP              ; Якщо DS:SI більше AH, то ми змінюємо їх місцями (елемент вже стоїть на своєму місці)
        mov al, [si]
        mov [si], ah
        mov [bx], al
       
        NO_SWAP:                ; Якщо ні, то стрибаємо сюди
        inc si
        cmp si, cx
        jne SORT_START          ; Якщо ми пройшли увесь масив (SI = arrray_length), то ми ви
    ret
endp sort

